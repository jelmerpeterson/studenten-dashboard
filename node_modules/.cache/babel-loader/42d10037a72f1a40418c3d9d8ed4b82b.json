{"ast":null,"code":"var _jsxFileName = \"/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js\";\nimport React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup, VictoryLabel } from \"victory\";\nimport StudentData from \"./StudentData\";\nimport wincTheme from \"./WincTheme\";\n\nconst ChartAvg = props => {\n  // Verkrijg hier de namen van de assignments\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({\n          assignment: item.assignment\n        });\n      }\n    } // console.log(assignment);\n\n\n    return assignment;\n  }; // verkrijg hier de namen van de assigment en koppel met difficult en enjoy average\n\n\n  const getNames = () => {\n    let assignments = getAssignments();\n    let assignmentsWithData = assignments.map(ass => {\n      let data = {};\n      data = StudentData.filter(i => {\n        return ass.assignment === i.assignment;\n      });\n      const getDataLength = data.length;\n      let difficultyRating = data.map(d => {\n        return parseInt(d.difficultyRating);\n      }).reduce((a, b) => a + b, 0);\n      difficultyRating = Math.round(difficultyRating / getDataLength);\n      let enjoymentRating = data.map(e => {\n        return parseInt(e.enjoymentRating);\n      }).reduce((a, b) => a + b, 0);\n      enjoymentRating = Math.round(enjoymentRating / getDataLength);\n      return {\n        assignment: ass.assignment,\n        difficultyRating: difficultyRating,\n        enjoymentRating: enjoymentRating\n      };\n    });\n    return assignmentsWithData;\n  }; // getAssignmentsAverage();\n  // console.log(getAssignmentsAverage());\n\n\n  let dataForChart = getNames();\n  dataForChart = dataForChart.map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`\n  }));\n  console.log(\"Data:\", dataForChart);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Dashboard overview all Students\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryGroup, {\n    offset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    color: \"#8791f6\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linechart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#c43a31\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#ff00ff\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default ChartAvg;","map":{"version":3,"sources":["/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","VictoryLabel","StudentData","wincTheme","ChartAvg","props","getAssignments","studentData","assignment","map","Map","item","has","set","push","getNames","assignments","assignmentsWithData","ass","data","filter","i","getDataLength","length","difficultyRating","d","parseInt","reduce","a","b","Math","round","enjoymentRating","e","dataForChart","avg","label","console","log","top","bottom","left","right","duration","onLoad","stroke","parent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n  VictoryLabel,\n} from \"victory\";\nimport StudentData from \"./StudentData\";\nimport wincTheme from \"./WincTheme\";\n\nconst ChartAvg = (props) => {\n  // Verkrijg hier de namen van de assignments\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({ assignment: item.assignment });\n      }\n    }\n    // console.log(assignment);\n    return assignment;\n  };\n\n  // verkrijg hier de namen van de assigment en koppel met difficult en enjoy average\n  const getNames = () => {\n    let assignments = getAssignments();\n    let assignmentsWithData = assignments.map((ass) => {\n      let data = {};\n\n      data = StudentData.filter((i) => {\n        return ass.assignment === i.assignment;\n      });\n\n      const getDataLength = data.length;\n\n      let difficultyRating = data\n        .map((d) => {\n          return parseInt(d.difficultyRating);\n        })\n        .reduce((a, b) => a + b, 0);\n      difficultyRating = Math.round(difficultyRating / getDataLength);\n      let enjoymentRating = data\n        .map((e) => {\n          return parseInt(e.enjoymentRating);\n        })\n        .reduce((a, b) => a + b, 0);\n      enjoymentRating = Math.round(enjoymentRating / getDataLength);\n      return {\n        assignment: ass.assignment,\n        difficultyRating: difficultyRating,\n        enjoymentRating: enjoymentRating,\n      };\n    });\n    return assignmentsWithData;\n  };\n\n  // getAssignmentsAverage();\n  // console.log(getAssignmentsAverage());\n\n  let dataForChart = getNames();\n  dataForChart = dataForChart.map((avg) => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`,\n  }));\n\n  console.log(\"Data:\", dataForChart);\n\n  return (\n    <React.Fragment>\n      <figure>\n        <h3>Dashboard overview all Students</h3>\n        <>\n          {/* Eerste staaf diagram rood */}\n          <div className=\"barchart\">\n          <VictoryChart\n            padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n            domainPadding={15}\n            theme={wincTheme}\n          >\n\n            <VictoryGroup offset={20}>\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={dataForChart}\n                animate={{\n                  duration: 4000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"difficultyRating\"\n                alignment=\"start\"\n                color='#8791f6'\n\n                tickValues={[1, 2, 3, 4, 5]}\n              />\n\n              {/* Eerste staaf diagram geel */}\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={dataForChart}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"enjoymentRating\"\n                alignment=\"start\"\n                tickValues={[1, 2, 3, 4, 5]}\n              />\n            </VictoryGroup>\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={dataForChart.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n\n    \n          </VictoryChart>\n          </div>\n          {/* Begin lijn  */}\n          <div className=\"linechart\">\n\n\n          <VictoryChart\n            padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n            domainPadding={15}\n            theme={wincTheme}\n          >\n            <VictoryLine\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"difficultyRating\"\n              alignment=\"start\"\n            />\n            <VictoryLine\n              style={{\n                data: { stroke: \"#ff00ff\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"enjoymentRating\"\n              alignment=\"start\"\n            />\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={dataForChart.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n          </div>\n\n        </>\n      </figure>\n    </React.Fragment>\n  );\n};\n\nexport default ChartAvg;\n"]},"metadata":{},"sourceType":"module"}