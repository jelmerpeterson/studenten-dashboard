{"ast":null,"code":"var _jsxFileName = \"/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js\";\nimport React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup, VictoryLabel } from \"victory\"; // import StudentData from \"./StudentData\";\n\nimport wincTheme from \"./WincTheme\";\n\nconst ChartAvg = props => {\n  // Verkrijg hier de namen van de assignments\n  let dataForChart = props.getNames();\n  dataForChart = dataForChart.map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Dashboard overview all Students\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"inside-div-h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Difficult and Enjoyment rate all assignments\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryGroup, {\n    offset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    color: \"#8791f6\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    color: \"#38d7a7\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linechart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"inside-div-h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Average line chart all assignments\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#c43a31\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#ff00ff\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default ChartAvg;","map":{"version":3,"sources":["/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","VictoryLabel","wincTheme","ChartAvg","props","dataForChart","getNames","map","avg","assignment","difficultyRating","enjoymentRating","label","top","bottom","left","right","duration","onLoad","data","stroke","parent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n  VictoryLabel,\n} from \"victory\";\n// import StudentData from \"./StudentData\";\nimport wincTheme from \"./WincTheme\";\n\nconst ChartAvg = (props) => {\n  // Verkrijg hier de namen van de assignments\n  let dataForChart = props.getNames();\n  dataForChart = dataForChart.map((avg) => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`,\n  }));\n\n  return (\n    <React.Fragment>\n      <figure>\n        <h3>Dashboard overview all Students</h3>\n        <>\n          {/* Eerste staaf diagram rood */}\n          <div className=\"barchart\">\n            <h3 className=\"inside-div-h3\">Difficult and Enjoyment rate all assignments</h3>\n          <VictoryChart\n            padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n            domainPadding={15}\n            theme={wincTheme}\n          >\n\n            <VictoryGroup offset={20}>\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={dataForChart}\n                animate={{\n                  duration: 4000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"difficultyRating\"\n                alignment=\"start\"\n                color='#8791f6'\n\n                tickValues={[1, 2, 3, 4, 5]}\n              />\n\n              {/* Eerste staaf diagram geel */}\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={dataForChart}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"enjoymentRating\"\n                color='#38d7a7'\n\n                tickValues={[1, 2, 3, 4, 5]}\n              />\n            </VictoryGroup>\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={dataForChart.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n\n    \n          </VictoryChart>\n          </div>\n          {/* Begin lijn  */}\n          <div className=\"linechart\">\n\n              <h3 className=\"inside-div-h3\">Average line chart all assignments</h3>\n          <VictoryChart\n            padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n            domainPadding={15}\n            theme={wincTheme}\n          >\n            <VictoryLine\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"difficultyRating\"\n              alignment=\"start\"\n            />\n            <VictoryLine\n                style={{\n                  data: { stroke: \"#ff00ff\" },\n                  parent: { border: \"1px solid #ccc\" },\n                }}\n                labelComponent={<VictoryTooltip />}\n                data={dataForChart}\n                animate={{\n                  duration: 4000,\n                  onLoad: { duration: 4000 },\n                }}\n                x=\"assignment\"\n                y=\"enjoymentRating\"\n                alignment=\"start\"\n                />\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={dataForChart.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n          </div>\n\n\n\n       \n        </>\n      </figure>\n    </React.Fragment>\n  );\n};\n\nexport default ChartAvg;\n\n\n\n"]},"metadata":{},"sourceType":"module"}