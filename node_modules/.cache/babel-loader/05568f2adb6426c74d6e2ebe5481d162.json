{"ast":null,"code":"var _jsxFileName = \"/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/StudentDetails.js\";\nimport React from \"react\";\nimport StudentData from \"./StudentData\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup, VictoryLabel } from \"victory\"; // import StudentData from \"./StudentData\";\n\nimport wincTheme from \"./WincTheme\";\n\nconst StudentDetails = ({\n  match\n}) => {\n  console.log(match.params.name);\n  console.log(StudentData);\n  let dataForChart = StudentData.filter(item => {\n    return item.name === match.params.name;\n  }).map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Dashboard overview all Students\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barchart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"inside-div-h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Difficult and Enjoyment rate all assignments\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VictoryGroup, {\n    offset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    color: \"#8791f6\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    color: \"#38d7a7\",\n    tickValues: [1, 2, 3, 4, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linechart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"inside-div-h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Average line chart all assignments\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 40,\n      bottom: 100,\n      left: 60,\n      right: 60\n    },\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#c43a31\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#ff00ff\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }\n    }),\n    data: dataForChart,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: dataForChart.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }))))));\n};\n\nexport default StudentDetails;","map":{"version":3,"sources":["/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/StudentDetails.js"],"names":["React","StudentData","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","VictoryLabel","wincTheme","StudentDetails","match","console","log","params","name","dataForChart","filter","item","map","avg","assignment","difficultyRating","enjoymentRating","label","top","bottom","left","right","duration","onLoad","data","stroke","parent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport StudentData from \"./StudentData\";\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n  VictoryLabel,\n} from \"victory\";\n// import StudentData from \"./StudentData\";\nimport wincTheme from \"./WincTheme\";\n\nconst StudentDetails = ({match}) => {\n  console.log(match.params.name)\n  console.log(StudentData)\n\n  let dataForChart = StudentData.filter((item) => {\n      return item.name === match.params.name\n  })\n  .map((avg) => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating} Leuk: ${avg.enjoymentRating}`,\n  }));\n\n  return (\n    <React.Fragment>\n    <figure>\n      <h3>Dashboard overview all Students</h3>\n      <>\n        {/* Eerste staaf diagram rood */}\n        <div className=\"barchart\">\n          <h3 className=\"inside-div-h3\">Difficult and Enjoyment rate all assignments</h3>\n        <VictoryChart\n          padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n          domainPadding={15}\n          theme={wincTheme}\n        >\n\n          <VictoryGroup offset={20}>\n            <VictoryBar\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 3000 },\n              }}\n              x=\"assignment\"\n              y=\"difficultyRating\"\n              alignment=\"start\"\n              color='#8791f6'\n\n              tickValues={[1, 2, 3, 4, 5]}\n            />\n\n            {/* Eerste staaf diagram geel */}\n            <VictoryBar\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 2000,\n                onLoad: { duration: 3000 },\n              }}\n              x=\"assignment\"\n              y=\"enjoymentRating\"\n              color='#38d7a7'\n\n              tickValues={[1, 2, 3, 4, 5]}\n            />\n          </VictoryGroup>\n          <VictoryAxis\n            // tickValues specifies both the number of ticks and where\n            // they are placed on the axis\n            tickValues={[1, 2, 3, 4, 5]}\n            tickFormat={dataForChart.map((avg) => avg.assignment)}\n            tickLabelComponent={\n              <VictoryLabel angle={60} textAnchor=\"start\" />\n            }\n          />\n          <VictoryAxis dependentAxis />\n\n  \n        </VictoryChart>\n        </div>\n        {/* Begin lijn  */}\n        <div className=\"linechart\">\n\n            <h3 className=\"inside-div-h3\">Average line chart all assignments</h3>\n        <VictoryChart\n          padding={{ top: 40, bottom: 100, left: 60, right: 60 }}\n          domainPadding={15}\n          theme={wincTheme}\n        >\n          <VictoryLine\n            style={{\n              data: { stroke: \"#c43a31\" },\n              parent: { border: \"1px solid #ccc\" },\n            }}\n            labelComponent={<VictoryTooltip />}\n            data={dataForChart}\n            animate={{\n              duration: 4000,\n              onLoad: { duration: 4000 },\n            }}\n            x=\"assignment\"\n            y=\"difficultyRating\"\n            alignment=\"start\"\n          />\n          <VictoryLine\n              style={{\n                data: { stroke: \"#ff00ff\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={dataForChart}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"enjoymentRating\"\n              alignment=\"start\"\n              />\n          <VictoryAxis\n            // tickValues specifies both the number of ticks and where\n            // they are placed on the axis\n            tickValues={[1, 2, 3, 4, 5]}\n            tickFormat={dataForChart.map((avg) => avg.assignment)}\n            tickLabelComponent={\n              <VictoryLabel angle={60} textAnchor=\"start\" />\n            }\n          />\n          <VictoryAxis dependentAxis />\n        </VictoryChart>\n        </div>\n\n\n\n     \n      </>\n    </figure>\n  </React.Fragment>\n  );\n};\n\nexport default StudentDetails;\n"]},"metadata":{},"sourceType":"module"}