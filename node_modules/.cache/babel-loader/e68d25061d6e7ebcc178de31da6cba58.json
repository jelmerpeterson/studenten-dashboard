{"ast":null,"code":"var _jsxFileName = \"/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js\";\nimport React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup, VictoryLabel } from \"victory\";\nimport StudentData from \"./StudentData\"; // import StudentData from \"./StudentData\";\n\nconst wincTheme = {\n  area: {\n    style: {\n      data: {\n        fill: \"#212121\"\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 850,\n    height: 350,\n    padding: 50\n  },\n  axis: {\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: \"#90A4AE\",\n        strokeWidth: 2,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      },\n      axisLabel: {\n        textAnchor: \"middle\",\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      grid: {\n        fill: \"none\",\n        stroke: \"none\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"#90A4AE\",\n        strokeWidth: 1,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      },\n      tickLabels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 10,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 850,\n    height: 350,\n    padding: 50\n  },\n  bar: {\n    style: {\n      data: {\n        fill: \"#4a90e2\",\n        padding: 0,\n        strokeWidth: 0\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 5\n  },\n  chart: {\n    width: 800,\n    height: 300,\n    padding: 50\n  },\n  errorbar: {\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 3550,\n    padding: 50\n  },\n  group: {\n    colorScale: [\"#F4511E\", \"#FFF59D\", \"#DCE775\", \"#8BC34A\", \"#00796B\", \"#006064\"],\n    width: 350,\n    height: 350,\n    padding: 50\n  },\n  legend: {\n    colorScale: [\"#F4511E\", \"#FFF59D\", \"#DCE775\", \"#8BC34A\", \"#00796B\", \"#006064\"],\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      title: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 5,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    }\n  },\n  line: {\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 50\n  }\n};\n\nconst ChartAvg = props => {\n  // Verkrijg hier de namen van de assignments\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({\n          assignment: item.assignment\n        });\n      }\n    } // console.log(assignment);\n\n\n    return assignment;\n  }; // verkrijg hier de namen van de assigment en koppel met difficult en enjoy average\n\n\n  const getNames = () => {\n    let assignments = getAssignments();\n    let assignmentsWithData = assignments.map(ass => {\n      let data = {};\n      data = StudentData.filter(i => {\n        return ass.assignment === i.assignment;\n      });\n      const getDataLength = data.length;\n      let difficultyRating = data.map(d => {\n        return parseInt(d.difficultyRating);\n      }).reduce((a, b) => a + b, 0);\n      difficultyRating = Math.round(difficultyRating / getDataLength);\n      let enjoymentRating = data.map(e => {\n        return parseInt(e.enjoymentRating);\n      }).reduce((a, b) => a + b, 0);\n      enjoymentRating = Math.round(enjoymentRating / getDataLength);\n      return {\n        assignment: ass.assignment,\n        difficultyRating: difficultyRating,\n        enjoymentRating: enjoymentRating\n      };\n    });\n    return assignmentsWithData;\n  }; // getAssignmentsAverage();\n  // console.log(getAssignmentsAverage());\n\n\n  let chartData = getNames();\n  chartData = chartData.map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating}, Leuk: ${avg.enjoymentRating}`\n  }));\n  console.log(\"Mijn chartdata\", chartData);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 15,\n    padding: {\n      top: 0,\n      bottom: 180,\n      left: 160,\n      right: 100\n    },\n    theme: wincTheme,\n    width: 1400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryGroup, {\n    offset: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }),\n    data: chartData,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: chartData.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }),\n    data: chartData,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 3000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: chartData.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: chartData.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#c43a31\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 31\n      }\n    }),\n    data: chartData,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#ff00ff\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 31\n      }\n    }),\n    data: chartData,\n    animate: {\n      duration: 4000,\n      onLoad: {\n        duration: 4000\n      }\n    },\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    alignment: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: chartData.map(avg => avg.assignment),\n    tickLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, {\n      angle: 60,\n      textAnchor: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ChartAvg;","map":{"version":3,"sources":["/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","VictoryLabel","StudentData","wincTheme","area","style","data","fill","labels","fontFamily","fontSize","letterSpacing","padding","stroke","strokeWidth","width","height","axis","strokeLinecap","strokeLinejoin","axisLabel","textAnchor","grid","ticks","size","tickLabels","bar","chart","errorbar","borderWidth","opacity","group","colorScale","legend","gutter","orientation","titleOrientation","type","title","line","ChartAvg","props","getAssignments","studentData","assignment","map","Map","item","has","set","push","getNames","assignments","assignmentsWithData","ass","filter","i","getDataLength","length","difficultyRating","d","parseInt","reduce","a","b","Math","round","enjoymentRating","e","chartData","avg","label","console","log","top","bottom","left","right","duration","onLoad","parent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n  VictoryLabel,\n} from \"victory\";\nimport StudentData from \"./StudentData\";\n// import StudentData from \"./StudentData\";\n\nconst wincTheme = {\n  area: {\n    style: {\n      data: {\n        fill: \"#212121\",\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 850,\n    height: 350,\n    padding: 50,\n  },\n  axis: {\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: \"#90A4AE\",\n        strokeWidth: 2,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n      },\n      axisLabel: {\n        textAnchor: \"middle\",\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n      grid: {\n        fill: \"none\",\n        stroke: \"none\",\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"#90A4AE\",\n        strokeWidth: 1,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n      },\n      tickLabels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 10,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 850,\n    height: 350,\n    padding: 50,\n  },\n  bar: {\n    style: {\n      data: {\n        fill: \"#4a90e2\",\n        padding: 0,\n        strokeWidth: 0,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 5,\n  },\n\n  chart: {\n    width: 800,\n    height: 300,\n    padding: 50,\n  },\n  errorbar: {\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 3550,\n    padding: 50,\n  },\n  group: {\n    colorScale: [\n      \"#F4511E\",\n      \"#FFF59D\",\n      \"#DCE775\",\n      \"#8BC34A\",\n      \"#00796B\",\n      \"#006064\",\n    ],\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n  legend: {\n    colorScale: [\n      \"#F4511E\",\n      \"#FFF59D\",\n      \"#DCE775\",\n      \"#8BC34A\",\n      \"#00796B\",\n      \"#006064\",\n    ],\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\",\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n      title: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 5,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n  },\n  line: {\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n};\n\nconst ChartAvg = (props) => {\n  // Verkrijg hier de namen van de assignments\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({ assignment: item.assignment });\n      }\n    }\n    // console.log(assignment);\n    return assignment;\n  };\n\n  // verkrijg hier de namen van de assigment en koppel met difficult en enjoy average\n  const getNames = () => {\n    let assignments = getAssignments();\n    let assignmentsWithData = assignments.map((ass) => {\n      let data = {};\n\n      data = StudentData.filter((i) => {\n        return ass.assignment === i.assignment;\n      });\n\n      const getDataLength = data.length;\n\n      let difficultyRating = data\n        .map((d) => {\n          return parseInt(d.difficultyRating);\n        })\n        .reduce((a, b) => a + b, 0);\n      difficultyRating = Math.round(difficultyRating / getDataLength);\n      let enjoymentRating = data\n        .map((e) => {\n          return parseInt(e.enjoymentRating);\n        })\n        .reduce((a, b) => a + b, 0);\n      enjoymentRating = Math.round(enjoymentRating / getDataLength);\n      return {\n        assignment: ass.assignment,\n        difficultyRating: difficultyRating,\n        enjoymentRating: enjoymentRating,\n      };\n    });\n    return assignmentsWithData;\n  };\n\n  // getAssignmentsAverage();\n  // console.log(getAssignmentsAverage());\n\n  let chartData = getNames();\n  chartData = chartData.map((avg) => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht: ${avg.assignment}\n    Moeilijk: ${avg.difficultyRating}, Leuk: ${avg.enjoymentRating}`,\n  }));\n\n  console.log(\"Mijn chartdata\", chartData);\n\n  return (\n    <React.Fragment>\n      <figure>\n        <div>\n          {/* Eerste staaf diagram rood */}\n          <VictoryChart\n            domainPadding={15}\n            padding={{ top: 0, bottom: 180, left: 160, right: 100 }}\n            theme={wincTheme}\n            width={1400}\n            height={400}\n          >\n            <VictoryGroup offset={50}>\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={chartData}\n                animate={{\n                  duration: 4000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"difficultyRating\"\n                alignment=\"start\"\n                tickValues={[1, 2, 3, 4, 5]}\n                tickFormat={chartData.map((avg) => avg.assignment)}\n              />\n\n              {/* Eerste staaf diagram geel */}\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={chartData}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 3000 },\n                }}\n                x=\"assignment\"\n                y=\"enjoymentRating\"\n                alignment=\"start\"\n                tickValues={[1, 2, 3, 4, 5]}\n                tickFormat={chartData.map((avg) => avg.assignment)}\n              />\n            </VictoryGroup>\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={chartData.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n\n          {/* Begin lijn  */}\n          <VictoryChart domainPadding={15} theme={wincTheme}>\n            <VictoryLine\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={chartData}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"difficultyRating\"\n              alignment=\"start\"\n            />\n            <VictoryLine\n              style={{\n                data: { stroke: \"#ff00ff\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              labelComponent={<VictoryTooltip />}\n              data={chartData}\n              animate={{\n                duration: 4000,\n                onLoad: { duration: 4000 },\n              }}\n              x=\"assignment\"\n              y=\"enjoymentRating\"\n              alignment=\"start\"\n            />\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={chartData.map((avg) => avg.assignment)}\n              tickLabelComponent={\n                <VictoryLabel angle={60} textAnchor=\"start\" />\n              }\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n        </div>\n      </figure>\n    </React.Fragment>\n  );\n};\n\nexport default ChartAvg;\n"]},"metadata":{},"sourceType":"module"}