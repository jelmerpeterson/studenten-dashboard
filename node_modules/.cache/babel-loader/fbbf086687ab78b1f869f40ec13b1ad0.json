{"ast":null,"code":"var _jsxFileName = \"/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js\";\nimport React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLine, VictoryGroup } from \"victory\";\nimport StudentData from \"./StudentData\"; // import StudentData from \"./StudentData\";\n\nconst wincTheme = {\n  area: {\n    style: {\n      data: {\n        fill: \"#212121\"\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 50\n  },\n  axis: {\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: \"#90A4AE\",\n        strokeWidth: 2,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      },\n      axisLabel: {\n        textAnchor: \"middle\",\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      grid: {\n        fill: \"none\",\n        stroke: \"none\"\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"#90A4AE\",\n        strokeWidth: 1,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      },\n      tickLabels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 50\n  },\n  bar: {\n    style: {\n      data: {\n        fill: \"#4a90e2\",\n        padding: 0,\n        strokeWidth: 0\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 20\n  },\n  chart: {\n    width: 800,\n    height: 300,\n    padding: 50\n  },\n  errorbar: {\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 50\n  },\n  group: {\n    colorScale: [\"#F4511E\", \"#FFF59D\", \"#DCE775\", \"#8BC34A\", \"#00796B\", \"#006064\"],\n    width: 350,\n    height: 350,\n    padding: 50\n  },\n  legend: {\n    colorScale: [\"#F4511E\", \"#FFF59D\", \"#DCE775\", \"#8BC34A\", \"#00796B\", \"#006064\"],\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      },\n      title: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 5,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    }\n  },\n  line: {\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0\n      }\n    },\n    width: 350,\n    height: 350,\n    padding: 50\n  }\n};\n\nconst ChartAvg = props => {\n  const getRandomRating = () => 5;\n\n  const getRandomRating2 = () => 4;\n\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({\n          assignment: item.assignment\n        });\n      }\n    } // console.log(assignment);\n\n\n    return assignment;\n  };\n\n  const GetAverage = () => {\n    let studentData = StudentData;\n    let assignment = getAssignments();\n    const count = 56;\n    let difficultRating = studentData.map(item => {\n      return parseInt(item.difficultyRating);\n    }).reduce((a, b) => a + b, 0);\n    console.log(\"Difficult voor som:\", difficultRating);\n    difficultRating = difficultRating / count;\n    let enjoymentRating = studentData.map(item => {\n      return parseInt(item.enjoymentRating);\n    }).reduce((a, b) => a + b, 0);\n    enjoymentRating = enjoymentRating / count;\n    console.log(\"Difficult:\", difficultRating);\n    console.log(\"enjoy:\", enjoymentRating);\n    console.log(\"count:\", count);\n    console.log(\"assignment:\", assignment);\n    return {\n      assignment: assignment,\n      difficultRating: difficultRating,\n      enjoymentRating: enjoymentRating\n    };\n  };\n\n  GetAverage();\n  console.log(GetAverage());\n  let assignmentRatingAverage = [{\n    assignment: \"W1D1-2\"\n  }, {\n    assignment: \"W1D1-1\"\n  }, {\n    assignment: \"W1D1-3\"\n  }, {\n    assignment: \"W1D2-1\"\n  }, {\n    assignment: \"W1D2-2\"\n  }, {\n    assignment: \"W1D3-1\"\n  }, {\n    assignment: \"W1D3-1\"\n  }, {\n    assignment: \"W1D3-2\"\n  }, {\n    assignment: \"W1D3-3\"\n  }, {\n    assignment: \"W1D3-4\"\n  }, {\n    assignment: \"W1D3-5\"\n  }, {\n    assignment: \"W1D3-7\"\n  }, {\n    assignment: \"jelmer\"\n  }];\n  assignmentRatingAverage = assignmentRatingAverage.map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: getRandomRating(),\n    enjoymentRating: getRandomRating2()\n  })); // console.log(assignmentRatingAverage);\n  // Add label\n\n  const assignmentRatingAverageWithLabels = assignmentRatingAverage.map(avg => ({\n    assignment: avg.assignment,\n    difficultyRating: avg.difficultyRating,\n    enjoymentRating: avg.enjoymentRating,\n    label: `Opdracht ${avg.assignment},\n      difficultyRating: ${avg.difficultyRating},\n      enjoymentRating: ${avg.enjoymentRating}`\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryGroup, {\n    offset: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }),\n    data: assignmentRatingAverageWithLabels,\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: assignmentRatingAverageWithLabels.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }),\n    data: assignmentRatingAverageWithLabels,\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: assignmentRatingAverageWithLabels.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: assignmentRatingAverageWithLabels.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 15,\n    theme: wincTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#c43a31\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    data: assignmentRatingAverage,\n    x: \"assignment\",\n    y: \"difficultyRating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"#ff00ff\"\n      },\n      parent: {\n        border: \"1px solid #ccc\"\n      }\n    },\n    data: assignmentRatingAverage,\n    x: \"assignment\",\n    y: \"enjoymentRating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n  // they are placed on the axis\n  , {\n    tickValues: [1, 2, 3, 4, 5],\n    tickFormat: assignmentRatingAverage.map(avg => avg.assignment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ChartAvg;","map":{"version":3,"sources":["/Users/jelmerpeterson/Documents/winc academy/week6/eindopdracht-dashboard/student-dashboard/src/components/ChartAvg.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","VictoryLine","VictoryGroup","StudentData","wincTheme","area","style","data","fill","labels","fontFamily","fontSize","letterSpacing","padding","stroke","strokeWidth","width","height","axis","strokeLinecap","strokeLinejoin","axisLabel","textAnchor","grid","ticks","size","tickLabels","bar","chart","errorbar","borderWidth","opacity","group","colorScale","legend","gutter","orientation","titleOrientation","type","title","line","ChartAvg","props","getRandomRating","getRandomRating2","getAssignments","studentData","assignment","map","Map","item","has","set","push","GetAverage","count","difficultRating","parseInt","difficultyRating","reduce","a","b","console","log","enjoymentRating","assignmentRatingAverage","avg","assignmentRatingAverageWithLabels","label","parent","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLine,\n  VictoryGroup,\n} from \"victory\";\nimport StudentData from \"./StudentData\";\n// import StudentData from \"./StudentData\";\n\nconst wincTheme = {\n  area: {\n    style: {\n      data: {\n        fill: \"#212121\",\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n  axis: {\n    style: {\n      axis: {\n        fill: \"transparent\",\n        stroke: \"#90A4AE\",\n        strokeWidth: 2,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n      },\n      axisLabel: {\n        textAnchor: \"middle\",\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n      grid: {\n        fill: \"none\",\n        stroke: \"none\",\n      },\n      ticks: {\n        fill: \"transparent\",\n        size: 5,\n        stroke: \"#90A4AE\",\n        strokeWidth: 1,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n      },\n      tickLabels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n  bar: {\n    style: {\n      data: {\n        fill: \"#4a90e2\",\n        padding: 0,\n        strokeWidth: 0,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 8,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 20,\n  },\n\n  chart: {\n    width: 800,\n    height: 300,\n    padding: 50,\n  },\n  errorbar: {\n    borderWidth: 8,\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n  group: {\n    colorScale: [\n      \"#F4511E\",\n      \"#FFF59D\",\n      \"#DCE775\",\n      \"#8BC34A\",\n      \"#00796B\",\n      \"#006064\",\n    ],\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n  legend: {\n    colorScale: [\n      \"#F4511E\",\n      \"#FFF59D\",\n      \"#DCE775\",\n      \"#8BC34A\",\n      \"#00796B\",\n      \"#006064\",\n    ],\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\",\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n      title: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 5,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n  },\n  line: {\n    style: {\n      data: {\n        fill: \"transparent\",\n        opacity: 1,\n        stroke: \"#455A64\",\n        strokeWidth: 2,\n      },\n      labels: {\n        fontFamily: \"'Roboto', 'Helvetica Neue', Helvetica, sans-serif\",\n        fontSize: 12,\n        letterSpacing: \"normal\",\n        padding: 8,\n        fill: \"#455A64\",\n        stroke: \"transparent\",\n        strokeWidth: 0,\n      },\n    },\n    width: 350,\n    height: 350,\n    padding: 50,\n  },\n};\n\nconst ChartAvg = (props) => {\n  const getRandomRating = () => 5;\n  const getRandomRating2 = () => 4;\n\n  const getAssignments = () => {\n    const studentData = StudentData;\n    let assignment = [];\n    const map = new Map();\n    for (const item of studentData) {\n      if (!map.has(item.assignment)) {\n        map.set(item.assignment, true);\n        assignment.push({ assignment: item.assignment });\n      }\n    }\n    // console.log(assignment);\n    return assignment;\n  };\n\n  const GetAverage = () => {\n    let studentData = StudentData;\n    let assignment = getAssignments();\n\n    const count = 56;\n\n    let difficultRating = studentData\n      .map((item) => {\n        return parseInt(item.difficultyRating);\n      })\n      .reduce((a, b) => a + b, 0);\n\n    console.log(\"Difficult voor som:\", difficultRating);\n\n    difficultRating = difficultRating / count;\n\n    let enjoymentRating = studentData\n      .map((item) => {\n        return parseInt(item.enjoymentRating);\n      })\n      .reduce((a, b) => a + b, 0);\n    enjoymentRating = enjoymentRating / count;\n\n    console.log(\"Difficult:\", difficultRating);\n    console.log(\"enjoy:\", enjoymentRating);\n    console.log(\"count:\", count);\n    console.log(\"assignment:\", assignment);\n\n    return {\n      assignment: assignment,\n      difficultRating: difficultRating,\n      enjoymentRating: enjoymentRating,\n    };\n  };\n  GetAverage();\n  console.log(GetAverage());\n\n  let assignmentRatingAverage = [\n    { assignment: \"W1D1-2\" },\n    { assignment: \"W1D1-1\" },\n    { assignment: \"W1D1-3\" },\n    { assignment: \"W1D2-1\" },\n    { assignment: \"W1D2-2\" },\n    { assignment: \"W1D3-1\" },\n    { assignment: \"W1D3-1\" },\n    { assignment: \"W1D3-2\" },\n    { assignment: \"W1D3-3\" },\n    { assignment: \"W1D3-4\" },\n    { assignment: \"W1D3-5\" },\n    { assignment: \"W1D3-7\" },\n    { assignment: \"jelmer\" },\n  ];\n\n  assignmentRatingAverage = assignmentRatingAverage.map((avg) => ({\n    assignment: avg.assignment,\n    difficultyRating: getRandomRating(),\n    enjoymentRating: getRandomRating2(),\n  }));\n\n  // console.log(assignmentRatingAverage);\n\n  // Add label\n  const assignmentRatingAverageWithLabels = assignmentRatingAverage.map(\n    (avg) => ({\n      assignment: avg.assignment,\n      difficultyRating: avg.difficultyRating,\n      enjoymentRating: avg.enjoymentRating,\n      label: `Opdracht ${avg.assignment},\n      difficultyRating: ${avg.difficultyRating},\n      enjoymentRating: ${avg.enjoymentRating}`,\n    })\n  );\n\n  return (\n    <React.Fragment>\n      <figure>\n        <div>\n          {/* Eerste staaf diagram rood */}\n          <VictoryChart domainPadding={15} theme={wincTheme}>\n            <VictoryGroup offset={20}>\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={assignmentRatingAverageWithLabels}\n                x=\"assignment\"\n                y=\"difficultyRating\"\n                tickValues={[1, 2, 3, 4, 5]}\n                tickFormat={assignmentRatingAverageWithLabels.map(\n                  (avg) => avg.assignment\n                )}\n              />\n\n              {/* Eerste staaf diagram geel */}\n              <VictoryBar\n                labelComponent={<VictoryTooltip />}\n                data={assignmentRatingAverageWithLabels}\n                x=\"assignment\"\n                y=\"enjoymentRating\"\n                tickValues={[1, 2, 3, 4, 5]}\n                tickFormat={assignmentRatingAverageWithLabels.map(\n                  (avg) => avg.assignment\n                )}\n              />\n            </VictoryGroup>\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={assignmentRatingAverageWithLabels.map(\n                (avg) => avg.assignment\n              )}\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n\n          {/* Begin lijn diagram */}\n          <VictoryChart domainPadding={15} theme={wincTheme}>\n            <VictoryLine\n              style={{\n                data: { stroke: \"#c43a31\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              data={assignmentRatingAverage}\n              x=\"assignment\"\n              y=\"difficultyRating\"\n            />\n            <VictoryLine\n              style={{\n                data: { stroke: \"#ff00ff\" },\n                parent: { border: \"1px solid #ccc\" },\n              }}\n              data={assignmentRatingAverage}\n              x=\"assignment\"\n              y=\"enjoymentRating\"\n            />\n            <VictoryAxis\n              // tickValues specifies both the number of ticks and where\n              // they are placed on the axis\n              tickValues={[1, 2, 3, 4, 5]}\n              tickFormat={assignmentRatingAverage.map((avg) => avg.assignment)}\n            />\n            <VictoryAxis dependentAxis />\n          </VictoryChart>\n        </div>\n      </figure>\n    </React.Fragment>\n  );\n};\n\nexport default ChartAvg;\n"]},"metadata":{},"sourceType":"module"}